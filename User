To avoid the "initial password expired" problem, you can **create a permanent login user and password** in Argo CD by:

### ‚úÖ Creating a New Local User in Argo CD with a Custom Password

This is done by editing the `argocd-cm` ConfigMap and `argocd-secret` to define a user and a **bcrypt-hashed password**.

---

## üîê STEP-BY-STEP: Create a Custom Local User in Argo CD

---

### üßæ 1. Generate a bcrypt hash of your desired password

You can run this on any Linux/Mac machine with `htpasswd`:

```bash
htpasswd -bnBC 10 "" my-secure-password | tr -d ':\n'
```

Example:

```bash
htpasswd -bnBC 10 "" myuser123 | tr -d ':\n'
```

üîë Sample bcrypt output (do **not** reuse this in production):

```
$2y$10$WzQdZWZ7GU3EY9q4DnB3D.FYvUwYVg6Q8OKr5db6P3MTl0klcSL1u
```

---

### ‚öôÔ∏è 2. Patch the `argocd-cm` ConfigMap to define the user

```bash
kubectl -n argocd edit configmap argocd-cm
```

Add this under `data:` (or create `data:` section if it doesn't exist):

```yaml
  accounts.myuser: login
```

> This creates a user `myuser` with login-only permissions (RBAC can be extended later).

Save and exit.

---

### üîë 3. Patch the `argocd-secret` with the bcrypt password

```bash
kubectl -n argocd edit secret argocd-secret
```

Under `stringData:` or `data:`, add this line:

```yaml
  myuser.password: $2y$10$WzQdZWZ7GU3EY9q4DnB3D.FYvUwYVg6Q8OKr5db6P3MTl0klcSL1u
```

If you use `data:` instead of `stringData:`, encode the hash in base64:

```bash
echo -n '$2y$10$WzQdZWZ7GU3EY9q4DnB3D.FYvUwYVg6Q8OKr5db6P3MTl0klcSL1u' | base64
```

---

### üîÅ 4. Restart Argo CD server pods

```bash
kubectl -n argocd rollout restart deployment argocd-server
```

---

### ‚úÖ 5. Log in using the new user

```bash
argocd login localhost:8080 \
  --username myuser \
  --password myuser123 \
  --insecure
```

---

## üéØ Optional: Assign Roles to the New User (RBAC)

You can give the user more permissions by editing `argocd-rbac-cm`:

```bash
kubectl -n argocd edit configmap argocd-rbac-cm
```

Add:

```yaml
  policy.csv: |
    p, myuser, *, *, *, allow
```

This gives full access. You can customize it to be read-only, sync-only, etc.

---

## ‚úÖ Summary

| Step | What You Do                     |
| ---- | ------------------------------- |
| 1    | Generate bcrypt password        |
| 2    | Add new user to `argocd-cm`     |
| 3    | Add password to `argocd-secret` |
| 4    | Restart Argo CD server          |
| 5    | Login with `argocd login`       |

---

Would you like a ready-made YAML patch script to automate this whole user creation?
