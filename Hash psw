To generate and **see the bcrypt hash** of a password (e.g., for Argo CD admin), you can use several tools. Here are the most practical methods:

---

## ‚úÖ 1. Using **htpasswd** (Linux/Mac/WSL)

This is the **easiest and fastest** way.

### üõ†Ô∏è Install `apache2-utils` or `htpasswd`

```bash
# Ubuntu/Debian
sudo apt install apache2-utils

# macOS (Homebrew)
brew install httpd
```

### üîê Generate bcrypt hash:

```bash
htpasswd -bnBC 12 "" your-password | tr -d ':\n'
```

üìå Example:

```bash
htpasswd -bnBC 12 "" admin123 | tr -d ':\n'
```

‚úÖ Output:

```
$2y$12$WzQdZWZ7GU3EY9q4DnB3D.FYvUwYVg6Q8OKr5db6P3MTl0klcSL1u
```

This is your **bcrypt hash**.

---

## ‚úÖ 2. Using Python (if no `htpasswd`)

```python
# Run this in Python 3
import bcrypt
password = b"admin123"
hashed = bcrypt.hashpw(password, bcrypt.gensalt())
print(hashed.decode())
```

Run it:

```bash
python3 script.py
```

---

## ‚úÖ 3. Use Online Tools (‚ö†Ô∏è Not Recommended for Real Passwords)

> Only use this for testing/dummy passwords.

* [https://bcrypt-generator.com/](https://bcrypt-generator.com/)
* [https://www.browserling.com/tools/bcrypt](https://www.browserling.com/tools/bcrypt)

---

## üîÅ Example Use in Argo CD:

```bash
kubectl -n argocd patch secret argocd-secret \
  -p '{"stringData": {
    "admin.password": "$2y$12$WzQdZWZ7GU3EY9q4DnB3D.FYvUwYVg6Q8OKr5db6P3MTl0klcSL1u", 
    "admin.passwordMtime": "'$(date +%FT%T%Z)'" 
  }}'
```

Then log in with:

```bash
argocd login localhost:8080 --username admin --password admin123 --insecure
```

---

Let me know if you want a bcrypt hash for a specific password ‚Äî I can generate it for you.
